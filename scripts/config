#!/bin/bash
# In simple cases, you don't need a config script.

# With a simple config_panel.toml, you can write in the app settings, in the
# upstream config file or replace complete files (logo ...) and restart services.

# The config scripts allows you to go further, to handle specific cases
# (validation of several interdependent fields, specific getter/setter for a value,
# display dynamic informations or choices, pre-loading of config type .cube... ).

#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source /usr/share/yunohost/helpers

ynh_abort_if_errors

#=================================================
# RETRIEVE ARGUMENTS
#=================================================

install_dir=$(ynh_app_setting_get --key=install_dir)

#=================================================
# SPECIFIC GETTERS FOR TOML SHORT KEY
#=================================================
get__backends_urls() {
    local backends=$(grep -E '^backends\s+=\s+' /etc/$app/server.conf | cut -d= -f2 | sed 's/ //g')
    for backend in ${backends//,/ }
    do
        sed -n '/\['${backend}'\]/,$p' /etc/$app/server.conf | grep -E -v "^(#|$)" | grep -m1 -E 'url\s+=\s+' | cut -d= -f2 | xargs
        echo ""
    done
}

#=================================================
# SPECIFIC VALIDATORS FOR TOML SHORT KEYS
#=================================================

#=================================================
# SPECIFIC SETTERS FOR TOML SHORT KEYS
#=================================================
set__backends_urls() {

    # Backend password generation
    while IFS= read -r backend_url
    do
        local backend_id=$(echo $backend_url | sed s@^https://@@ | sed 's/[.-]/_/g' | sed s@/@_@g)
        if [[ "$(ynh_app_setting_get --key=pwd__${backend_id})" == "" ]]
        then
            local varname="pwd__${backend_id}"
            declare "$varname"=$(ynh_string_random)
            ynh_app_setting_set --key=$varname --value=${!varname}
        fi
    done <<< "$backends_urls"
    ynh_config_add --jinja --template="server.conf" --destination="/etc/$app/server.conf"
}
#=================================================
# SPECIFIC ACTIONS
#=================================================
#run__get_secrets() {
#    local backends=$(grep -E '^backends\s+=\s+' /etc/$app/server.conf | cut -d= -f2 | sed 's/ //g')
#    for backend in ${backends//,/ }
#    do
#        sed -n '/\['${backend}'\]/,$p' /etc/$app/server.conf | grep -E -v "^(#|$)" | grep -m1 -E 'url\s+=\s+' | cut -d= -f2 | xargs >&$YNH_STDINFO
#        sed -n '/\['${backend}'\]/,$p' /etc/$app/server.conf | grep -E -v "^(#|$)" | grep -m1 -E 'secret\s+=\s+' | cut -d= -f2 | xargs >&$YNH_STDINFO
#    done
#}
run__get_secrets() {
    echo "🔐 Displaying dummy secrets for debug..." >&$YNH_STDINFO
    echo "signaling_secret = test123" >&$YNH_STDINFO
}
#=================================================
ynh_app_config_run "$1"
